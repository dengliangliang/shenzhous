{"version":3,"sources":["uni-app:///main.js","webpack:///C:/Users/GIGABYTE/Desktop/shenzhou-post-app-code-master/views/monthly/statement.vue?ebee","webpack:///C:/Users/GIGABYTE/Desktop/shenzhou-post-app-code-master/views/monthly/statement.vue?64f4","webpack:///C:/Users/GIGABYTE/Desktop/shenzhou-post-app-code-master/views/monthly/statement.vue?fe44","webpack:///C:/Users/GIGABYTE/Desktop/shenzhou-post-app-code-master/views/monthly/statement.vue?cfc9","uni-app:///views/monthly/statement.vue","webpack:///C:/Users/GIGABYTE/Desktop/shenzhou-post-app-code-master/views/monthly/statement.vue?ce51","webpack:///C:/Users/GIGABYTE/Desktop/shenzhou-post-app-code-master/views/monthly/statement.vue?8f77"],"names":["wx","__webpack_require_UNI_MP_PLUGIN__","__webpack_require__","createPage","Page","data","eligibilityId","eligibilityInfo","userInfo","showTotalBillTab","currentTab","showFilterPanel","startDate","endDate","displayStartDate","displayEndDate","selectedType","currentPage","pageSize","hasMoreData","loading","monthlyBill","statementList","totalAmount","settlementCycles","currentCycleIndex","hasAllPeriodsOption","showCyclePanel","paymentLoading","computed","isOwner","console","loadMoreStatus","selectedCycleName","hasValidCycles","currentPeriodInfo","hasUnpaidStatements","unpaidAmount","filter","reduce","onLoad","options","methods","getAllPrice","userId","startTime","endTime","statementApi","res","getEligibilityInfo","uni","title","monthlyApi","switchTab","toggleFilterPanel","onStartDateChange","icon","onEndDateChange","selectType","applyFilters","resetFilters","loadStatements","refresh","pageNum","monthlySettlementEligibilityId","type","viewStatementDetail","url","selectCurrentCycle","calculateAllSettlementCycles","createTime","settlementCycle","today","cycleEnd","start","end","isCurrent","isFuture","history","current","future","cursor","final","number","formatDate","selectCycle","toggleCyclePanel","isAll","settleStatements","content","confirmText","confirmColor","mask","orderId","openId","wxpayApi","treatSettlementAmount","payResult","setTimeout","loadMoreData","refreshData"],"mappings":";;;;;;;;;;;;;AAAA;AAGA;AACA;AAHA;AACAA,EAAE,CAACC,iCAAiC,GAAGC,mBAAmB;AAG1DC,UAAU,CAACC,kBAAI,CAAC,C;;;;;;;;;;;;;ACLhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAsH;AACtH;AAC6D;AACL;AACc;;;AAGtE;AACqK;AACrK,gBAAgB,+KAAU;AAC1B,EAAE,+EAAM;AACR,EAAE,oFAAM;AACR,EAAE,6FAAe;AACjB;AACA;AACA;AACA;AACA;AACA,EAAE,wFAAU;AACZ;AACA;;AAEA;AACe,gF;;;;;;;;;;;;ACvBf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,aAAa,0SAEN;AACP,KAAK;AACL;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC1CA;AAAA;AAAA;AAAA;AAAmmB,CAAgB,6nBAAG,EAAC,C;;;;;;;;;;;;;;;;;;;;;;ACyNvnB;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;eACA;EACAC;IACA;MACAC;MAAA;MACAC;MAAA;;MAEAC;MAAA;;MAEAC;MAAA;;MAEA;MACAC;MAAA;;MAEA;MACAC;MACAC;MACAC;MACAC;MACAC;MACAC;MAAA;;MAEA;MACAC;MACAC;MACAC;MACAC;MAEAC;MAEA;MACAC;MACAC;MAAA;;MAEA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;MACAC;MAAA;;MAEA;MACAC;IACA;EACA;EAEAC;IACA;IACAC;MACA,sCACA,iBACA;MACAC;QACAxB;QACAC;QACAsB;MACA;MACA;IACA;IAEA;IACAE;MACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MAEA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;QACA;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;IACA;IAEA;IACAC;MACA;MACA;IACA;IAEA;IACAC;MACA,sCACAC;QAAA;MAAA,GACAC;QACA;QACA;MACA;;MAEA;MACA;IACA;EACA;EAEA;EACAC;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;cACAT;cAAA,KAEAU;gBAAA;gBAAA;cAAA;cACA;cAAA;cAGAV;cACA;cAAA;cAAA,OACA;YAAA;cAEAA;cACA;cACA;cAEAA;cACA;cACA;;cAEA;cACA;cAEA;cAAA;cAAA;YAAA;cAAA;cAAA;cAEAA;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAGA;EAEAW;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAEAC;gBACAC;gBACAC;gBAAA,MACA;kBAAA;kBAAA;gBAAA;gBAAA;gBAAA,OACAC;cAAA;gBAAAC;gBAEA;kBACA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA,OAEAD;cAAA;gBAAAC;gBACA;kBACA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAGA;IAEA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA;gBAEAC;kBACAC;gBACA;gBAAA;gBAAA,OACAC;cAAA;gBAAAJ;gBAEA;kBACA;kBACAjB;oBACAxB;oBACAC;oBACAsB;kBACA;;kBAEA;kBACA;oBACA;kBACA;oBACA;oBACA;kBACA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAC;cAAA;gBAAA;gBAEAmB;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IAEA;IACAG;MACA;MAEA;MACA;MACA;MACA;;MAEA;MACA;MACA;IACA;IAEA;IACAC;MACA;IACA;IAEA;IACAC;MACA;MACA;;MAEA;MACA;QACA;QACA;QACAL;UACAC;UACAK;QACA;MACA;IACA;IAEA;IACAC;MACA;;MAEA;MACA;QACAP;UACAC;UACAK;QACA;QACA;MACA;MAEA;MACA;IACA;IAEA;IACAE;MACA;IACA;IAEA;IACAC;MACA;MACA;QACAT;UACAC;UACAK;QACA;QACA;MACA;;MAEA;MACA;;MAEA;MACA;MACA;;MAEA;MACA;IACA;IAEA;IACAI;MACA;MACA;MACA;MACA;MACA;IACA;IAEA;IACAC;MAAA;QAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAAC;gBACA;kBACA;kBACA;gBACA;gBAAA,MAEA;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAGA;;gBAEA;gBACAC;gBACA7C;gBACA8C;gBACApB;gBACAC;gBACAC;gBACAmB,kEAEA;gBACAlC;kBACAgC;kBACA7C;kBACA8C;kBACApB;kBACAC;kBACAC;kBACAmB;gBACA;;gBAEA;gBAAA;gBAAA,OACAlB,iCACAgB,SACA7C,UACA8C,gCACApB,QACAC,WACAC,SACAmB,KACA;cAAA;gBARAjB;gBAUA;gBACA;kBACA;kBACA;oBACA;kBACA;oBACA;kBACA;;kBAEA;kBACA;kBAEAjB,0FACAgC;gBACA;kBACA;oBACA;kBACA;kBACA;gBACA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAEAhC;gBACAmB;kBACAC;kBACAK;gBACA;gBACA;cAAA;gBAAA;gBAEA;gBAAA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IAEA;IACAU;MACAhB;QACAiB;MACA;IACA;IAEA;IACAC;MACArC;MACA;QACAA;QACA;MACA;;MAEA;MACA;QAAA;MAAA;MACAA;MAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACAA;MACA;IAEA;IAEA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IAEA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IAEAsC;MAAA;QAAA;MACAtC;;MAEA;MACA;MACA;MACA;;MAEA;MACA;MACA;QACAA;QACA;MACA;;MAEA;MACA,6BAGA;QAFAuC;QACAC;MAEA;QACA;QACA;QACA;MACA;MACA;MACA;MACAC;;MAEA;MACA;MACA;MACA;;MAEA;MACA;MACA;MAEA;QACA;QACA;QACAC;QACAA;QACAA;;QAEA;QACA;UACAC;UACAC;UACAC;UACAC;QACA;;QAEA;QACA;UACAC;QACA;UACAC;QACA;UACAC;QACA;;QAEA;QACAC;QACAA;QACAA;;QAEA;QACA;MACA;;MAEA;MACA;MACA;MACAC;MACA;MACA;MACA;MACA;MACA;MACA;QAAA;UACAC;UACAvE;UACAC;UACA+D;UACAC;QACA;MAAA;MAEA9C;IACA;IAEA;IACAqtD;YACAnB;YACAC;UACA;UACAqC;YACAC;YACAK;UACA;UACA;QACA;MACA;;MAEA;MACA;MACA;MACA;MACA;IACA;IAEA;IACA8B;MACA;MACA;QACApC;UACAC;UACAK;QACA;QACA;MACA;MAEA;;MAEA;MACA;QACA;UACA2B;UACAvE;UACAC;UACA0E;QACA;QACA;MACA;IACA;IAEA;IACAC;MAAA;MAAA;QAAA;QAAA;UAAA;YAAA;cAAA;gBAAA,KACA;kBAAA;kBAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAGA;;gBAEA;gBAAA;gBAAA,OACAtC;kBACAC;kBACAsC;kBACAC;kBACAC;gBACA;cAAA;gBALA3C;gBAOAjB;;gBAEA;gBAAA,IACAiB;kBAAA;kBAAA;gBAAA;gBACA;gBAAA;cAAA;gBAIA;gBACAE;kBACAC;kBACAyC;gBACA;;gBAEA;gBACAC;gBACAC;gBAAA;gBAAA,OACAC,mEACAC,uBACA,mFACA;cAAA;gBAHAC;gBAAA,KAOAA;kBAAA;kBAAA;gBAAA;gBACApD;gBACAC;gBAAA;gBAAA,OACAC;cAAA;gBAAAkD;gBAAA,KAEAA;kBAAA;kBAAA;gBAAA;gBACA;gBACAC;kBACAhD;kBACAA;oBACAC;oBACAK;kBACA;;kBAEA;kBACA0C;oBACA;oBACA;kBACA;gBACA;gBAAA;gBAAA;cAAA;gBAAA,MAEA;cAAA;gBAAA;gBAAA;cAAA;gBAGA;gBACAnE;gBACA;kBACAmB;oBACAC;oBACAK;kBACA;gBACA;gBAAA;cAAA;gBAAA;gBAAA;cAAA;gBAAA;gBAAA;gBAIAzB;gBACAmB;gBACAA;kBACAC;kBACAK;gBACA;gBACA;cAAA;cAAA;gBAAA;YAAA;UAAA;QAAA;MAAA;IAEA;IAEA;IACA2C;MACA;MACA;QACA;MACA;MAEApE;MACA;MACA;MACA;MACA;IACA;IAEA;IACAqE;MACA;IACA;EACA;AACA;AAAA,2B;;;;;;;;;;;;;ACvlCA;AAAA;AAAA;AAAA;AAA8oC,CAAgB,onCAAG,EAAC,C;;;;;;;;;;;ACAlqC;AACA,OAAO,KAAU,EAAE,kBAKd","file":"views/monthly/statement.js","sourcesContent":["import 'uni-pages';\n// @ts-ignore\nwx.__webpack_require_UNI_MP_PLUGIN__ = __webpack_require__;\nimport Vue from 'vue'\nimport Page from './views/monthly/statement.vue'\ncreatePage(Page)","import { render, staticRenderFns, recyclableRender, components } from \"./statement.vue?vue&type=template&id=6d4e3124&\"\nvar renderjs\nimport script from \"./statement.vue?vue&type=script&lang=js&\"\nexport * from \"./statement.vue?vue&type=script&lang=js&\"\nimport style0 from \"./statement.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\runtime\\\\componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null,\n  false,\n  components,\n  renderjs\n)\n\ncomponent.options.__file = \"views/monthly/statement.vue\"\nexport default component.exports","export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\templateLoader.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--17-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\template.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-uni-app-loader\\\\page-meta.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./statement.vue?vue&type=template&id=6d4e3124&\"","var components\ntry {\n  components = {\n    uniIcons: function () {\n      return import(\n        /* webpackChunkName: \"node-modules/@dcloudio/uni-ui/lib/uni-icons/uni-icons\" */ \"@dcloudio/uni-ui/lib/uni-icons/uni-icons.vue\"\n      )\n    },\n  }\n} catch (e) {\n  if (\n    e.message.indexOf(\"Cannot find module\") !== -1 &&\n    e.message.indexOf(\".vue\") !== -1\n  ) {\n    console.error(e.message)\n    console.error(\"1. 排查组件名称拼写是否正确\")\n    console.error(\n      \"2. 排查组件是否符合 easycom 规范，文档：https://uniapp.dcloud.net.cn/collocation/pages?id=easycom\"\n    )\n    console.error(\n      \"3. 若组件不符合 easycom 规范，需手动引入，并在 components 中注册该组件\"\n    )\n  } else {\n    throw e\n  }\n}\nvar render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  var g0 = !_vm.hasMoreData && _vm.statementList.length > 0\n  _vm.$mp.data = Object.assign(\n    {},\n    {\n      $root: {\n        g0: g0,\n      },\n    }\n  )\n}\nvar recyclableRender = false\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns, recyclableRender, components }","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./statement.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\babel-loader\\\\lib\\\\index.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--13-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\script.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./statement.vue?vue&type=script&lang=js&\"","<template>\r\n\t<view class=\"statement-container\">\r\n\t\t<!-- 导航栏 -->\r\n\t\t<view class=\"nav-header\">\r\n\t\t\t<view class=\"tabs-container\">\r\n\t\t\t\t<view class=\"tabs\">\r\n\t\t\t\t\t<view class=\"tab-item\" :class=\"{ active: currentTab === 0 }\" @click=\"switchTab(0)\" v-if=\"isOwner\">\r\n\t\t\t\t\t\t<text>总账单</text>\r\n\t\t\t\t\t\t<view class=\"tab-line\" v-if=\"currentTab === 0\"></view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"tab-item\" :class=\"{ active: currentTab === (isOwner ? 1 : 0) }\"\r\n\t\t\t\t\t\t@click=\"switchTab(isOwner ? 1 : 0)\">\r\n\t\t\t\t\t\t<text>我的账单</text>\r\n\t\t\t\t\t\t<view class=\"tab-line\" v-if=\"currentTab === (isOwner ? 1 : 0)\"></view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 摘要信息卡片 -->\r\n\t\t<view class=\"statement-summary\">\r\n\t\t\t<view class=\"summary-card\">\r\n\t\t\t\t<view class=\"summary-header\">\r\n\t\t\t\t\t<text>{{ currentTab === 0 && isOwner ? '账单统计' : '我的交易' }}</text>\r\n\t\t\t\t\t<view class=\"current-period-badge\" v-if=\"currentPeriodInfo && !currentPeriodInfo.isAll\">\r\n\t\t\t\t\t\t当前第{{ currentPeriodInfo.number }}期\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"summary-content\">\r\n\t\t\t\t\t<view class=\"summary-item\">\r\n\t\t\t\t\t\t<text class=\"value\">¥ {{ monthlyBill.month }}</text>\r\n\t\t\t\t\t\t<text class=\"label\">{{ currentTab === 0 && isOwner ? '总交易额' : '我的交易额' }}</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"summary-divider\"></view>\r\n\t\t\t\t\t<view class=\"summary-item\">\r\n\t\t\t\t\t\t<text class=\"value\">{{ monthlyBill.number }}</text>\r\n\t\t\t\t\t\t<text class=\"label\">交易笔数</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\r\n\t\t\t\t<!-- 修改结算按钮显示条件，增加资格状态判断 -->\r\n\t\t\t\t<view class=\"settle-button-container\"\r\n\t\t\t\t\tv-if=\"currentTab === 0 && isOwner && eligibilityInfo && eligibilityInfo.status === 0&&monthlyBill.treatSettlementAmount!==0.00\">\r\n\t\t\t\t\t<button class=\"settle-button\" @click=\"settleStatements\">\r\n\t\t\t\t\t\t<uni-icons type=\"weixin\" size=\"20\" color=\"#FFFFFF\"></uni-icons>\r\n\t\t\t\t\t\t<text>微信结算账单</text>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</view>\r\n\r\n\t\t\t\t<!-- 添加资格失效提示 -->\r\n\t\t\t\t<view class=\"invalid-eligibility-tip\"\r\n\t\t\t\t\tv-if=\"currentTab === 0 && isOwner && eligibilityInfo && eligibilityInfo.status === 1\">\r\n\t\t\t\t\t<uni-icons type=\"info\" size=\"16\" color=\"#FF4D4F\"></uni-icons>\r\n\t\t\t\t\t<text>月结资格已失效，无法进行结算操作</text>\r\n\t\t\t\t</view>\r\n\r\n\t\t\t\t<view class=\"period-info\" v-if=\"currentPeriodInfo && !currentPeriodInfo.isAll\">\r\n\t\t\t\t\t<uni-icons type=\"calendar\" size=\"16\" color=\"#FFFFFF\"></uni-icons>\r\n\t\t\t\t\t<text>{{ currentPeriodInfo.startDate }} 至 {{ currentPeriodInfo.endDate }}</text>\r\n\t\t\t\t</view>\r\n\t\t\t\t<view class=\"period-info\" v-if=\"currentPeriodInfo && currentPeriodInfo.isAll\">\r\n\t\t\t\t\t<uni-icons type=\"calendar\" size=\"16\" color=\"#FFFFFF\"></uni-icons>\r\n\t\t\t\t\t<text>显示全部账单记录</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 筛选条件卡片 - 简化版 -->\r\n\t\t<view class=\"filter-card\">\r\n\t\t\t<view class=\"filter-header\" @click=\"toggleFilterPanel\">\r\n\t\t\t\t<text>筛选条件</text>\r\n\t\t\t\t<uni-icons :type=\"showFilterPanel ? 'top' : 'bottom'\" size=\"14\" color=\"#666\"></uni-icons>\r\n\t\t\t</view>\r\n\r\n\t\t\t<view class=\"filter-body\" v-if=\"showFilterPanel\">\r\n\t\t\t\t<!-- 日期范围选择 -->\r\n\t\t\t\t<view class=\"filter-row\">\r\n\t\t\t\t\t<view class=\"filter-label\">\r\n\t\t\t\t\t\t<uni-icons type=\"calendar\" size=\"16\" color=\"#FF6B01\"></uni-icons>\r\n\t\t\t\t\t\t<text>时间范围</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"date-pickers\">\r\n\t\t\t\t\t\t<picker mode=\"date\" :value=\"startDate\" @change=\"onStartDateChange\" class=\"date-picker\">\r\n\t\t\t\t\t\t\t<view class=\"picker-content\">\r\n\t\t\t\t\t\t\t\t<text>{{ displayStartDate || '开始日期' }}</text>\r\n\t\t\t\t\t\t\t\t<uni-icons type=\"right\" size=\"12\" color=\"#CCCCCC\"></uni-icons>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</picker>\r\n\t\t\t\t\t\t<text class=\"date-separator\">至</text>\r\n\t\t\t\t\t\t<picker mode=\"date\" :value=\"endDate\" @change=\"onEndDateChange\" class=\"date-picker\">\r\n\t\t\t\t\t\t\t<view class=\"picker-content\">\r\n\t\t\t\t\t\t\t\t<text>{{ displayEndDate || '结束日期' }}</text>\r\n\t\t\t\t\t\t\t\t<uni-icons type=\"right\" size=\"12\" color=\"#CCCCCC\"></uni-icons>\r\n\t\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t</picker>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\r\n\t\t\t\t<!-- 类型筛选 -->\r\n\t\t\t\t<view class=\"filter-row\">\r\n\t\t\t\t\t<view class=\"filter-label\">\r\n\t\t\t\t\t\t<uni-icons type=\"list\" size=\"16\" color=\"#FF6B01\"></uni-icons>\r\n\t\t\t\t\t\t<text>交易类型</text>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t\t<view class=\"filter-tabs\">\r\n\t\t\t\t\t\t<view class=\"filter-tab\" :class=\"{ active: selectedType === null }\" @click=\"selectType(null)\">\r\n\t\t\t\t\t\t\t全部\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view class=\"filter-tab\" :class=\"{ active: selectedType === 0 }\" @click=\"selectType(0)\">\r\n\t\t\t\t\t\t\t支付\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view class=\"filter-tab\" :class=\"{ active: selectedType === 1 }\" @click=\"selectType(1)\">\r\n\t\t\t\t\t\t\t退款\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\r\n\t\t\t\t<!-- 筛选按钮 -->\r\n\t\t\t\t<view class=\"filter-actions\">\r\n\t\t\t\t\t<button class=\"filter-btn reset\" @click=\"resetFilters\">\r\n\t\t\t\t\t\t<uni-icons type=\"reload\" size=\"14\" color=\"#666666\"></uni-icons>\r\n\t\t\t\t\t\t<text>重置</text>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<button class=\"filter-btn apply\" @click=\"applyFilters\">\r\n\t\t\t\t\t\t<uni-icons type=\"search\" size=\"14\" color=\"#FFFFFF\"></uni-icons>\r\n\t\t\t\t\t\t<text>应用筛选</text>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 修改周期选择器显示逻辑 -->\r\n\t\t<view class=\"cycle-selector\" v-if=\"hasValidCycles\">\r\n\t\t\t<view class=\"cycle-header\" @click=\"toggleCyclePanel\">\r\n\t\t\t\t<text>历史周期查询</text>\r\n\t\t\t\t<text class=\"current-cycle\">{{ selectedCycleName }}</text>\r\n\t\t\t\t<uni-icons :type=\"showCyclePanel ? 'top' : 'bottom'\" size=\"14\" color=\"#666\"></uni-icons>\r\n\t\t\t</view>\r\n\r\n\t\t\t<view class=\"cycle-panel\" v-if=\"showCyclePanel\">\r\n\t\t\t\t<scroll-view scroll-y class=\"cycle-list\">\r\n\t\t\t\t\t<view class=\"cycle-item\" v-for=\"(cycle, index) in settlementCycles\" :key=\"index\"\r\n\t\t\t\t\t\t:class=\"{ active: currentCycleIndex === index }\" @click=\"selectCycle(index)\">\r\n\t\t\t\t\t\t<view class=\"cycle-name\">第{{ cycle.number }}期</view>\r\n\t\t\t\t\t\t<view class=\"cycle-date\">{{ cycle.startDate }} 至 {{ cycle.endDate }}</view>\r\n\t\t\t\t\t\t<view class=\"cycle-status\" v-if=\"cycle.isCurrent\">当前周期</view>\r\n\t\t\t\t\t\t<view class=\"history-badge\" v-if=\"!cycle.isCurrent\">历史周期</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</scroll-view>\r\n\t\t\t</view>\r\n\t\t</view>\r\n\r\n\t\t<!-- 添加无周期提示 -->\r\n\t\t<view class=\"no-cycles-tip\" v-if=\"!hasValidCycles\">\r\n\t\t\t<uni-icons type=\"info\" size=\"16\" color=\"#FAAD14\"></uni-icons>\r\n\t\t\t<text>当前月结资格暂无历史周期数据</text>\r\n\t\t</view>\r\n\r\n\t\t<!-- 账单列表标题 -->\r\n\t\t<view class=\"list-header\">\r\n\t\t\t<text>账单明细</text>\r\n\t\t\t<text class=\"list-count\">共 {{ monthlyBill.number }} 笔</text>\r\n\t\t</view>\r\n\r\n\t\t<!-- 账单列表 -->\r\n\t\t<scroll-view scroll-y class=\"statement-list-container\" @scrolltolower=\"loadMoreData\"\r\n\t\t\t:style=\"{ height: 'calc(100vh - 450rpx)' }\">\r\n\t\t\t<view class=\"statement-list\">\r\n\t\t\t\t<!-- 账单项 -->\r\n\t\t\t\t<view class=\"statement-item\" v-for=\"(item, index) in statementList\" :key=\"item.monthlyStatementId\"\r\n\t\t\t\t\t@click=\"viewStatementDetail(item)\" :class=\"{ 'animate-in': index < 10 }\"\r\n\t\t\t\t\t:style=\"{ 'animation-delay': index * 0.05 + 's' }\">\r\n\t\t\t\t\t<view class=\"item-header\">\r\n\t\t\t\t\t\t<view class=\"order-info\">\r\n\t\t\t\t\t\t\t<text class=\"order-id\">订单号: {{ item.orderId }}</text>\r\n\t\t\t\t\t\t\t<text class=\"time\">{{ item.createTime }}</text>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view class=\"type-tag\" :class=\"{ refund: item.type === 1 }\">\r\n\t\t\t\t\t\t\t{{ item.type === 0 ? '支付' : '退款' }}\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<view class=\"item-content\">\r\n\t\t\t\t\t\t<text class=\"amount\" :class=\"{ refund: item.type === 1 }\">\r\n\t\t\t\t\t\t\t{{ item.type === 0 ? '+' : '-' }} ¥{{ item.amount }}\r\n\t\t\t\t\t\t</text>\r\n\t\t\t\t\t</view>\r\n\r\n\t\t\t\t\t<view class=\"item-footer\">\r\n\t\t\t\t\t\t<view class=\"payment-status\" :class=\"{ paid: item.isUserPays === 1 }\"\r\n\t\t\t\t\t\t\tv-if=\"item.isUserPays === 1 || item.type === 0\">\r\n\t\t\t\t\t\t\t{{ item.isUserPays === 1 ? '已结算' : '未结算' }}\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t\t<view class=\"flex-space\"></view>\r\n\t\t\t\t\t\t<view class=\"detail-link\">\r\n\t\t\t\t\t\t\t<text>查看详情</text>\r\n\t\t\t\t\t\t\t<uni-icons type=\"right\" size=\"12\" color=\"#999999\"></uni-icons>\r\n\t\t\t\t\t\t</view>\r\n\t\t\t\t\t</view>\r\n\t\t\t\t</view>\r\n\r\n\t\t\t\t<!-- 添加底部加载状态指示器 -->\r\n\t\t\t\t<view class=\"load-more\" v-if=\"loading && hasMoreData\">\r\n\t\t\t\t\t<view class=\"loading-spinner\"></view>\r\n\t\t\t\t\t<text>加载更多...</text>\r\n\t\t\t\t</view>\r\n\r\n\t\t\t\t<!-- 添加无更多数据提示 -->\r\n\t\t\t\t<view class=\"no-more-data\" v-if=\"!hasMoreData && statementList.length > 0\">\r\n\t\t\t\t\t<text>已经到底啦</text>\r\n\t\t\t\t</view>\r\n\t\t\t</view>\r\n\t\t</scroll-view>\r\n\t</view>\r\n</template>\r\n\r\n<script>\r\n\timport monthlyApi from '@/api/monthly'\r\n\timport statementApi from '@/api/statement'\r\n\timport request from '@/utils/request'\r\n\timport paymentApi from '@/api/payment'\r\n\timport wxpayApi from '@/api/wechat.js'\r\n\texport default {\r\n\t\tdata() {\r\n\t\t\treturn {\r\n\t\t\t\teligibilityId: '', // 月结资格ID\r\n\t\t\t\teligibilityInfo: null, // 月结资格信息\r\n\r\n\t\t\t\tuserInfo: uni.getStorageSync('userInfo') || {}, // 当前用户信息\r\n\r\n\t\t\t\tshowTotalBillTab: false, // 是否显示总账单选项卡\r\n\r\n\t\t\t\t// 标签切换\r\n\t\t\t\tcurrentTab: 0, // 当前选中的标签 0-总账单 1-我的账单\r\n\r\n\t\t\t\t// 筛选条件\r\n\t\t\t\tshowFilterPanel: false,\r\n\t\t\t\tstartDate: '',\r\n\t\t\t\tendDate: '',\r\n\t\t\t\tdisplayStartDate: '',\r\n\t\t\t\tdisplayEndDate: '',\r\n\t\t\t\tselectedType: null, // 0-支付 1-退款 null-全部\r\n\r\n\t\t\t\t// 分页加载\r\n\t\t\t\tcurrentPage: 1,\r\n\t\t\t\tpageSize: 5,\r\n\t\t\t\thasMoreData: true,\r\n\t\t\t\tloading: false,\r\n\r\n\t\t\t\tmonthlyBill: {},\r\n\r\n\t\t\t\t// 数据\r\n\t\t\t\tstatementList: [],\r\n\t\t\t\ttotalAmount: 0, // 总交易金额\r\n\r\n\t\t\t\t// 添加周期相关数据的初始值\r\n\t\t\t\tsettlementCycles: [], // 所有结算周期\r\n\t\t\t\tcurrentCycleIndex: 0, // 当前选中的周期索引\r\n\t\t\t\thasAllPeriodsOption: false, // 是否已添加\"全部\"选项\r\n\t\t\t\tshowCyclePanel: false, // 控制周期选择面板显示\r\n\r\n\t\t\t\t// 添加支付相关状态\r\n\t\t\t\tpaymentLoading: false\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcomputed: {\r\n\t\t\t// 判断是否为资格拥有者\r\n\t\t\tisOwner() {\r\n\t\t\t\tconst isOwner = this.eligibilityInfo &&\r\n\t\t\t\t\tthis.userInfo &&\r\n\t\t\t\t\tthis.eligibilityInfo.userId === this.userInfo.userId\r\n\t\t\t\tconsole.log('isOwner计算:', {\r\n\t\t\t\t\teligibilityInfo: this.eligibilityInfo,\r\n\t\t\t\t\tuserInfo: this.userInfo,\r\n\t\t\t\t\tisOwner\r\n\t\t\t\t})\r\n\t\t\t\treturn isOwner\r\n\t\t\t},\r\n\r\n\t\t\t// 加载更多状态\r\n\t\t\tloadMoreStatus() {\r\n\t\t\t\tif (this.loading) return 'loading'\r\n\t\t\t\tif (this.hasMoreData) return 'more'\r\n\t\t\t\treturn 'noMore'\r\n\t\t\t},\r\n\r\n\t\t\t// 当前选中周期的名称 - 修改处理无周期情况\r\n\t\t\tselectedCycleName() {\r\n\t\t\t\tif (this.settlementCycles.length === 0) return '暂无周期'\r\n\r\n\t\t\t\tconst cycle = this.settlementCycles[this.currentCycleIndex]\r\n\t\t\t\tif (cycle.isAll) return '全部'\r\n\t\t\t\treturn `第${cycle.number}期 (${cycle.startDate} 至 ${cycle.endDate})`\r\n\t\t\t},\r\n\r\n\t\t\t// 是否有可用的周期\r\n\t\t\thasValidCycles() {\r\n\t\t\t\t// 排除只有\"全部\"选项的情况\r\n\t\t\t\tif (this.settlementCycles.length === 1 && this.settlementCycles[0].isAll) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\treturn this.settlementCycles.length > 0\r\n\t\t\t},\r\n\r\n\t\t\t// 当前期数信息\r\n\t\t\tcurrentPeriodInfo() {\r\n\t\t\t\tif (this.settlementCycles.length === 0) return null\r\n\t\t\t\treturn this.settlementCycles[this.currentCycleIndex]\r\n\t\t\t},\r\n\r\n\t\t\t// 是否有未结算的账单\r\n\t\t\thasUnpaidStatements() {\r\n\t\t\t\t// 如果没有账单或者所有账单都已结算，也允许点击结算按钮\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\r\n\t\t\t// 计算未结算金额\r\n\t\t\tunpaidAmount() {\r\n\t\t\t\tconst unpaidAmount = this.statementList\r\n\t\t\t\t\t.filter(item => item.isUserPays === 0)\r\n\t\t\t\t\t.reduce((total, item) => {\r\n\t\t\t\t\t\tconst amount = item.type === 1 ? -item.amount : item.amount\r\n\t\t\t\t\t\treturn total + amount\r\n\t\t\t\t\t}, 0)\r\n\r\n\t\t\t\t// 如果没有未结算账单，返回总金额\r\n\t\t\t\treturn unpaidAmount > 0 ? unpaidAmount : this.totalAmount\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\t// 修改生命周期方法\r\n\t\tasync onLoad(options) {\r\n\t\t\tconsole.log('onLoad options:', options)\r\n\r\n\t\t\tif (options.id) {\r\n\t\t\t\tthis.eligibilityId = options.id\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tconsole.log('开始获取月结资格信息')\r\n\t\t\t\t\t// 获取月结资格信息\r\n\t\t\t\t\tawait this.getEligibilityInfo()\r\n\r\n\t\t\t\t\tconsole.log('开始计算结算周期')\r\n\t\t\t\t\t// 计算所有结算周期\r\n\t\t\t\t\tthis.calculateAllSettlementCycles()\r\n\r\n\t\t\t\t\tconsole.log('开始选择当前周期')\r\n\t\t\t\t\t// 选择当前周期\r\n\t\t\t\t\tthis.selectCurrentCycle()\r\n\r\n\t\t\t\t\t// 加载账单数据\r\n\t\t\t\t\tthis.loadStatements(true)\r\n\r\n\t\t\t\t\tthis.getAllPrice();\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error('初始化失败:', e)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmethods: {\r\n\t\t\tasync getAllPrice() {\r\n\r\n\t\t\t\tconst userId = this.currentTab === 1 || !this.isOwner ? this.userInfo.userId : ''\r\n\t\t\t\tconst startTime = this.startDate || ''\r\n\t\t\t\tconst endTime = this.endDate || ''\r\n\t\t\t\tif (this.currentTab === 0) {\r\n\t\t\t\t\tconst res = await statementApi.getAllPrice(this.eligibilityId, startTime, endTime)\r\n\r\n\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\tthis.monthlyBill = res\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconst res = await statementApi.getAllPrice(this.eligibilityId, startTime, endTime, userId)\r\n\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\tthis.monthlyBill = res\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\t// 获取月结资格信息\r\n\t\t\tasync getEligibilityInfo() {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tuni.showLoading({\r\n\t\t\t\t\t\ttitle: '加载中...'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tconst res = await monthlyApi.getEligibilityById(this.eligibilityId)\r\n\r\n\t\t\t\t\tif (res) {\r\n\t\t\t\t\t\tthis.eligibilityInfo = res\r\n\t\t\t\t\t\tconsole.log('获取到的月结资格信息:', {\r\n\t\t\t\t\t\t\teligibilityInfo: this.eligibilityInfo,\r\n\t\t\t\t\t\t\tuserInfo: this.userInfo,\r\n\t\t\t\t\t\t\tisOwner: this.isOwner\r\n\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t// 如果当前用户不是月结资格拥有者，直接显示\"我的账单\"页签\r\n\t\t\t\t\t\tif (!this.isOwner) {\r\n\t\t\t\t\t\t\tthis.currentTab = 0\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.currentTab = 0\r\n\t\t\t\t\t\t\tthis.showTotalBillTab = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error('获取月结资格信息失败:', e)\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 修改标签切换方法\r\n\t\t\tswitchTab(tab) {\r\n\t\t\t\tif (this.currentTab === tab) return\r\n\r\n\t\t\t\tthis.currentTab = tab\r\n\t\t\t\tthis.currentPage = 1\r\n\t\t\t\tthis.statementList = []\r\n\t\t\t\tthis.hasMoreData = true\r\n\r\n\t\t\t\t// 重新加载账单数据，保留当前选中的周期和筛选条件\r\n\t\t\t\tthis.loadStatements(true)\r\n\t\t\t\tthis.getAllPrice();\r\n\t\t\t},\r\n\r\n\t\t\t// 切换筛选面板\r\n\t\t\ttoggleFilterPanel() {\r\n\t\t\t\tthis.showFilterPanel = !this.showFilterPanel\r\n\t\t\t},\r\n\r\n\t\t\t// 修改开始日期选择处理函数\r\n\t\t\tonStartDateChange(e) {\r\n\t\t\t\tthis.startDate = e.detail.value\r\n\t\t\t\tthis.displayStartDate = e.detail.value\r\n\r\n\t\t\t\t// 如果已选择了结束日期，并且开始日期晚于结束日期，调整结束日期\r\n\t\t\t\tif (this.endDate && this.startDate > this.endDate) {\r\n\t\t\t\t\tthis.endDate = this.startDate\r\n\t\t\t\t\tthis.displayEndDate = this.startDate\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '已自动调整结束日期',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 修改结束日期选择处理函数\r\n\t\t\tonEndDateChange(e) {\r\n\t\t\t\tconst selectedEndDate = e.detail.value\r\n\r\n\t\t\t\t// 检查结束日期是否早于开始日期\r\n\t\t\t\tif (this.startDate && selectedEndDate < this.startDate) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '结束日期不能早于开始日期',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.endDate = selectedEndDate\r\n\t\t\t\tthis.displayEndDate = selectedEndDate\r\n\t\t\t},\r\n\r\n\t\t\t// 选择交易类型\r\n\t\t\tselectType(type) {\r\n\t\t\t\tthis.selectedType = type\r\n\t\t\t},\r\n\r\n\t\t\t// 修改应用筛选方法，确保日期有效\r\n\t\t\tapplyFilters() {\r\n\t\t\t\t// 验证日期\r\n\t\t\t\tif (this.startDate && this.endDate && this.startDate > this.endDate) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '结束日期不能早于开始日期',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 关闭筛选面板\r\n\t\t\t\tthis.showFilterPanel = false\r\n\r\n\t\t\t\t// 重置分页\r\n\t\t\t\tthis.currentPage = 1\r\n\t\t\t\tthis.hasMoreData = true\r\n\r\n\t\t\t\t// 重新加载数据\r\n\t\t\t\tthis.loadStatements(true)\r\n\t\t\t},\r\n\r\n\t\t\t// 重置筛选条件时也处理日期关系\r\n\t\t\tresetFilters() {\r\n\t\t\t\tthis.startDate = ''\r\n\t\t\t\tthis.endDate = ''\r\n\t\t\t\tthis.displayStartDate = ''\r\n\t\t\t\tthis.displayEndDate = ''\r\n\t\t\t\tthis.selectedType = null\r\n\t\t\t},\r\n\r\n\t\t\t// 修改加载账单数据方法\r\n\t\t\tasync loadStatements(refresh = false) {\r\n\t\t\t\tif (refresh) {\r\n\t\t\t\t\tthis.currentPage = 1\r\n\t\t\t\t\tthis.hasMoreData = true\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (!this.hasMoreData && !refresh) return\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.loading = true\r\n\r\n\t\t\t\t\t// 获取API所需的所有参数，注意使用正确的变量名\r\n\t\t\t\t\tconst pageNum = this.currentPage;\r\n\t\t\t\t\tconst pageSize = this.pageSize;\r\n\t\t\t\t\tconst monthlySettlementEligibilityId = this.eligibilityId;\r\n\t\t\t\t\tconst userId = this.currentTab === 1 || !this.isOwner ? this.userInfo.userId : '';\r\n\t\t\t\t\tconst startTime = this.startDate || '';\r\n\t\t\t\t\tconst endTime = this.endDate || '';\r\n\t\t\t\t\tconst type = this.selectedType !== null ? this.selectedType : null;\r\n\r\n\t\t\t\t\t// 输出日志，帮助调试\r\n\t\t\t\t\tconsole.log('加载账单参数:', {\r\n\t\t\t\t\t\tpageNum,\r\n\t\t\t\t\t\tpageSize,\r\n\t\t\t\t\t\tmonthlySettlementEligibilityId,\r\n\t\t\t\t\t\tuserId,\r\n\t\t\t\t\t\tstartTime,\r\n\t\t\t\t\t\tendTime,\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\t\t// 使用原有API调用方式，传入单独的参数\r\n\t\t\t\t\tconst res = await statementApi.pageStatement(\r\n\t\t\t\t\t\tpageNum,\r\n\t\t\t\t\t\tpageSize,\r\n\t\t\t\t\t\tmonthlySettlementEligibilityId,\r\n\t\t\t\t\t\tuserId,\r\n\t\t\t\t\t\tstartTime,\r\n\t\t\t\t\t\tendTime,\r\n\t\t\t\t\t\ttype\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\t// 处理响应数据\r\n\t\t\t\t\tif (res && res.dataList && Array.isArray(res.dataList)) {\r\n\t\t\t\t\t\t// 更新列表数据\r\n\t\t\t\t\t\tif (refresh) {\r\n\t\t\t\t\t\t\tthis.statementList = [...res.dataList];\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.statementList = [...this.statementList, ...res.dataList];\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// 更新分页状态\r\n\t\t\t\t\t\tthis.hasMoreData = res.dataList.length >= this.pageSize;\r\n\r\n\t\t\t\t\t\tconsole.log(\r\n\t\t\t\t\t\t\t`已加载账单数据，当前页: ${pageNum}, 数据条数: ${res.dataList.length}, 是否有更多: ${this.hasMoreData}`);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (refresh) {\r\n\t\t\t\t\t\t\tthis.statementList = [];\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis.hasMoreData = false;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tconsole.error('加载账单数据异常:', error);\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '加载账单数据失败',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis.hasMoreData = false;\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tthis.loading = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 查看账单详情\r\n\t\t\tviewStatementDetail(item) {\r\n\t\t\t\tuni.navigateTo({\r\n\t\t\t\t\turl: `/views/monthly/statement-detail?id=${item.monthlyStatementId}`\r\n\t\t\t\t})\r\n\t\t\t},\r\n\r\n\t\t\t// 选择当前周期\r\n\t\t\tselectCurrentCycle() {\r\n\t\t\t\tconsole.log('开始选择当前周期')\r\n\t\t\t\tif (this.settlementCycles.length === 0) {\r\n\t\t\t\t\tconsole.warn('没有可选择的周期')\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 找到当前周期的索引\r\n\t\t\t\tconst currentIndex = this.settlementCycles.findIndex(cycle => cycle.isCurrent)\r\n\t\t\t\tconsole.log('当前周期索引:', currentIndex)\r\n\r\n\t\t\t\tif (currentIndex !== -1) {\r\n\t\t\t\t\tthis.currentCycleIndex = currentIndex\r\n\t\t\t\t\tconst cycle = this.settlementCycles[this.currentCycleIndex]\r\n\t\t\t\t\tthis.startDate = cycle.startDate\r\n\t\t\t\t\tthis.endDate = cycle.endDate\r\n\t\t\t\t\tthis.displayStartDate = cycle.startDate\r\n\t\t\t\t\tthis.displayEndDate = cycle.endDate\r\n\t\t\t\t\tconsole.log('已选择当前周期:', this.settlementCycles[currentIndex])\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\t// 添加日期格式化方法\r\n\t\t\t// formatDate(date) {\r\n\t\t\t// \tif (!date) return ''\r\n\r\n\t\t\t// \tconst d = new Date(date)\r\n\t\t\t// \tconst year = d.getFullYear()\r\n\t\t\t// \tconst month = String(d.getMonth() + 1).padStart(2, '0')\r\n\t\t\t// \tconst day = String(d.getDate()).padStart(2, '0')\r\n\r\n\t\t\t// \treturn `${year}-${month}-${day}`\r\n\t\t\t// },\r\n\r\n\t\t\t// calculateAllSettlementCycles() {\r\n\t\t\t//   console.log('开始计算历史周期，当前资格信息:', this.eligibilityInfo);\r\n\r\n\t\t\t//   if (!this.eligibilityInfo || !this.eligibilityInfo.createTime) {\r\n\t\t\t//     console.warn('月结资格信息不完整，无法计算周期');\r\n\t\t\t//     this.settlementCycles = [];\r\n\t\t\t//     return;\r\n\t\t\t//   }\r\n\r\n\t\t\t//   const { settlementCycle, createTime } = this.eligibilityInfo;\r\n\t\t\t//   const settlementDate = 15; // 固定结算日\r\n\t\t\t//   const cycleNumberMap = { 0: 1, 1: 3, 2: 6 };\r\n\t\t\t//   const cycleNumber = cycleNumberMap[settlementCycle] || 1;\r\n\r\n\t\t\t//   const createdAt = new Date(createTime.replace(/-/g, '/'));\r\n\t\t\t//   const today = new Date();\r\n\t\t\t//   today.setHours(0, 0, 0, 0);\r\n\r\n\t\t\t//   let cycles = [];\r\n\t\t\t//   let currentStart = new Date(createdAt);\r\n\t\t\t//   currentStart.setHours(0, 0, 0, 0);\r\n\r\n\t\t\t//   // 生成周期核心逻辑\r\n\t\t\t//   // 新增配置参数\r\n\t\t\t//   const EXTRA_CYCLES = 2; // 遇到当前周期后额外生成的周期数\r\n\r\n\t\t\t//   while (currentStart <= today || extraCount > 0) {\r\n\t\t\t//     const cycleEnd = this.calculateCycleEnd(currentStart, cycleNumber);\r\n\t\t\t//     cycleEnd.setHours(23, 59, 59, 999);\r\n\r\n\t\t\t//     // 判断当前周期\r\n\t\t\t//     const isCurrent = today <= cycleEnd;\r\n\r\n\t\t\t//     cycles.push({\r\n\t\t\t//       startDate: this.formatDate(currentStart),\r\n\t\t\t//       endDate: this.formatDate(cycleEnd),\r\n\t\t\t//       isCurrent\r\n\t\t\t//     });\r\n\r\n\t\t\t//     // 遇到当前周期开始计数\r\n\t\t\t//     if (isCurrent && extraCount === null) {\r\n\t\t\t//       extraCount = EXTRA_CYCLES;\r\n\t\t\t//     }\r\n\r\n\t\t\t//     // 在遇到当前周期后继续生成指定数量的周期\r\n\t\t\t//     if (extraCount !== null) {\r\n\t\t\t//       if (extraCount <= 0) break;\r\n\t\t\t//       extraCount--;\r\n\t\t\t//     }\r\n\r\n\t\t\t//     // 准备下一周期\r\n\t\t\t//     currentStart = new Date(cycleEnd);\r\n\t\t\t//     currentStart.setDate(currentStart.getDate() + 1);\r\n\t\t\t//     currentStart.setHours(0, 0, 0, 0);\r\n\t\t\t//   }\r\n\t\t\t// //   while (currentStart <= today) {\r\n\t\t\t// //     const cycleEnd = this.calculateCycleEnd(currentStart, cycleNumber);\r\n\t\t\t// //     cycleEnd.setHours(23, 59, 59, 999); // 包含当天\r\n\r\n\t\t\t// //     // 判断当前周期\r\n\t\t\t// //     const isCurrent = today <= cycleEnd;\r\n\r\n\t\t\t// //     cycles.push({\r\n\t\t\t// //       startDate: this.formatDate(currentStart),\r\n\t\t\t// //       endDate: this.formatDate(cycleEnd),\r\n\t\t\t// //       isCurrent\r\n\t\t\t// //     });\r\n\r\n\t\t\t// //     // 遇到当前周期停止生成\r\n\t\t\t// //     if (isCurrent) break;\r\n\r\n\t\t\t// //     // 准备下一个周期（结束日期次日）\r\n\t\t\t// //     currentStart = new Date(cycleEnd);\r\n\t\t\t// //     currentStart.setDate(currentStart.getDate() + 1);\r\n\t\t\t// //     currentStart.setHours(0, 0, 0, 0);\r\n\t\t\t// //   }\r\n\r\n\t\t\t//   // 按时间倒序排列并添加序号\r\n\t\t\t//   this.settlementCycles = cycles.reverse().map((item, index) => ({\r\n\t\t\t//     number: index + 1,\r\n\t\t\t//     ...item\r\n\t\t\t//   }));\r\n\r\n\t\t\t//   console.log('最终生成的结算周期:', this.settlementCycles);\r\n\t\t\t// },\r\n\r\n\t\t\t// // 计算周期结束日期（强制设置为15号）\r\n\t\t\t// calculateCycleEnd(startDate, cycleNumber) {\r\n\t\t\t//   const end = new Date(startDate);\r\n\t\t\t//   end.setMonth(end.getMonth() + cycleNumber);\r\n\t\t\t//   end.setDate(15); // 强制设置为当月15号\r\n\r\n\t\t\t//   // 处理跨年情况（12月+cycleNumber可能会超出）\r\n\t\t\t//   if (end.getMonth() !== (startDate.getMonth() + cycleNumber) % 12) {\r\n\t\t\t//     end.setFullYear(startDate.getFullYear() + Math.floor((startDate.getMonth() + cycleNumber) / 12));\r\n\t\t\t//   }\r\n\t\t\t//   return end;\r\n\t\t\t// },\r\n\r\n\t\t\t// // 保持原有格式方法\r\n\t\t\t// formatDate(date) {\r\n\t\t\t//   return `${date.getFullYear()}-${(date.getMonth()+1).toString().padStart(2,'0')}-${date.getDate().toString().padStart(2,'0')}`;\r\n\t\t\t// },\r\n\r\n\t\t\tcalculateAllSettlementCycles() {\r\n\t\t\t\tconsole.log('开始计算结算周期（最终排序修正版）');\r\n\r\n\t\t\t\t// 配置参数\r\n\t\t\t\tconst SETTLEMENT_DAY = 15; // 固定结算日\r\n\t\t\t\tconst FUTURE_CYCLES = 0; // 展示的未来周期数\r\n\t\t\t\tconst MAX_LOOP = 100; // 安全计数器\r\n\r\n\t\t\t\t// 初始化数据\r\n\t\t\t\tthis.settlementCycles = [];\r\n\t\t\t\tif (!this.eligibilityInfo?.createTime) {\r\n\t\t\t\t\tconsole.warn('月结资格信息不完整');\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 解析输入参数\r\n\t\t\t\tconst {\r\n\t\t\t\t\tcreateTime,\r\n\t\t\t\t\tsettlementCycle\r\n\t\t\t\t} = this.eligibilityInfo;\r\n\t\t\t\tconst cycleMonths = {\r\n\t\t\t\t\t0: 1,\r\n\t\t\t\t\t1: 3,\r\n\t\t\t\t\t2: 6\r\n\t\t\t\t} [settlementCycle] || 1;\r\n\t\t\t\tconst startDate = new Date(createTime.replace(/-/g, '/'));\r\n\t\t\t\tconst today = new Date();\r\n\t\t\t\ttoday.setHours(0, 0, 0, 0);\r\n\r\n\t\t\t\t// 准备数据结构\r\n\t\t\t\tlet history = []; // 历史周期（正序存储）\r\n\t\t\t\tlet current = null; // 当前周期\r\n\t\t\t\tlet future = []; // 未来周期（正序存储）\r\n\r\n\t\t\t\t// 核心算法\r\n\t\t\t\tlet cursor = new Date(startDate);\r\n\t\t\t\tlet loopCount = 0;\r\n\r\n\t\t\t\twhile (loopCount++ < MAX_LOOP) {\r\n\t\t\t\t\t// 计算周期结束日（强制15号）\r\n\t\t\t\t\tconst cycleEnd = new Date(cursor);\r\n\t\t\t\t\tcycleEnd.setMonth(cycleEnd.getMonth() + cycleMonths);\r\n\t\t\t\t\tcycleEnd.setDate(SETTLEMENT_DAY);\r\n\t\t\t\t\tcycleEnd.setHours(23, 59, 59, 999);\r\n\r\n\t\t\t\t\t// 创建周期对象\r\n\t\t\t\t\tconst cycle = {\r\n\t\t\t\t\t\tstart: new Date(cursor),\r\n\t\t\t\t\t\tend: new Date(cycleEnd),\r\n\t\t\t\t\t\tisCurrent: cursor <= today && today <= cycleEnd,\r\n\t\t\t\t\t\tisFuture: cursor > today\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\t// 分类存储\r\n\t\t\t\t\tif (cycle.end < today) {\r\n\t\t\t\t\t\thistory.push(cycle); // 历史周期按生成顺序正序存储\r\n\t\t\t\t\t} else if (cycle.isCurrent) {\r\n\t\t\t\t\t\tcurrent = cycle;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfuture.push(cycle);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 移动游标到下一周期开始\r\n\t\t\t\t\tcursor = new Date(cycleEnd);\r\n\t\t\t\t\tcursor.setDate(cursor.getDate() + 1);\r\n\t\t\t\t\tcursor.setHours(0, 0, 0, 0);\r\n\r\n\t\t\t\t\t// 终止条件：生成足够未来周期且游标超过今天\r\n\t\t\t\t\tif (future.length >= FUTURE_CYCLES && cursor > today) break;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 合并结果（历史正序 → 当前 → 未来正序）\r\n\t\t\t\tconst final = [...history]; // 历史按时间正序\r\n\t\t\t\tif (current) final.push(current);\r\n\t\t\t\tfinal.push(...future.slice(0, FUTURE_CYCLES));\r\n\t\t\t\tthis.startDate = current.startDate\r\n\t\t\t\tthis.endDate = current.endDate\r\n\t\t\t\tthis.displayStartDate = current.startDate\r\n\t\t\t\tthis.displayEndDate = current.endDate\r\n\t\t\t\t// 添加序号\r\n\t\t\t\tthis.settlementCycles = final.map((c, i) => ({\r\n\t\t\t\t\tnumber: i + 1,\r\n\t\t\t\t\tstartDate: this.formatDate(c.start),\r\n\t\t\t\t\tendDate: this.formatDate(c.end),\r\n\t\t\t\t\tisCurrent: c.isCurrent,\r\n\t\t\t\t\tisFuture: c.isFuture\r\n\t\t\t\t}));\r\n\r\n\t\t\t\tconsole.log('修正排序后的周期数据:', this.settlementCycles);\r\n\t\t\t},\r\n\r\n\t\t\t// 日期格式化保持原样\r\n\t\t\tformatDate(date) {\r\n\t\t\t\tconst pad = n => n.toString().padStart(2, '0');\r\n\t\t\t\treturn `${date.getFullYear()}-${pad(date.getMonth()+1)}-${pad(date.getDate())}`;\r\n\t\t\t},\r\n\r\n\t\t\t// // 计算所有历史结算周期 - 添加更多日志\r\n\t\t\t// calculateAllSettlementCycles() {\r\n\t\t\t// \tconsole.log('开始计算历史周期，当前资格信息:', this.eligibilityInfo)\r\n\r\n\t\t\t// \tif (!this.eligibilityInfo || !this.eligibilityInfo.createTime) {\r\n\t\t\t// \t\tconsole.warn('月结资格信息不完整，无法计算周期')\r\n\t\t\t// \t\tthis.settlementCycles = []\r\n\t\t\t// \t\treturn\r\n\t\t\t// \t}\r\n\r\n\t\t\t// \tconst {\r\n\t\t\t// \t\tsettlementCycle,\r\n\t\t\t// \t\tcreateTime,\r\n\t\t\t// \t\ttradeNumber\r\n\t\t\t// \t} = this.eligibilityInfo\r\n\t\t\t// \tconsole.log('周期计算参数:', {\r\n\t\t\t// \t\tsettlementCycle,\r\n\t\t\t// \t\tcreateTime,\r\n\t\t\t// \t\ttradeNumber\r\n\t\t\t// \t})\r\n\r\n\t\t\t// \t// 解析创建时间\r\n\t\t\t// \tconst createdAt = new Date(createTime.replace(/-/g, '/'))\r\n\t\t\t// \tconst today = new Date()\r\n\r\n\t\t\t// \t// 如果资格已失效，则不计算\r\n\t\t\t// \tif (this.eligibilityInfo.status === 1) {\r\n\t\t\t// \t\tconsole.log('月结资格已失效')\r\n\t\t\t// \t\tthis.settlementCycles = []\r\n\t\t\t// \t\treturn\r\n\t\t\t// \t}\r\n\r\n\t\t\t// \tlet cycles = []\r\n\t\t\t// \tlet cyclesCount = 0\r\n\r\n\t\t\t// \t// 根据不同的结算周期计算\r\n\t\t\t// \tswitch (settlementCycle) {\r\n\t\t\t// \t\tcase 0: // 月结\r\n\t\t\t// \t\t\tcyclesCount = this.calculateMonthlyCycles(createdAt, today)\r\n\t\t\t// \t\t\tbreak\r\n\t\t\t// \t\tcase 1: // 季结\r\n\t\t\t// \t\t\tcyclesCount = this.calculateQuarterlyCycles(createdAt, today)\r\n\t\t\t// \t\t\tbreak\r\n\t\t\t// \t\tcase 2: // 半年结\r\n\t\t\t// \t\t\tcyclesCount = this.calculateHalfYearlyCycles(createdAt, today)\r\n\t\t\t// \t\t\tbreak\r\n\t\t\t// \t\tdefault:\r\n\t\t\t// \t\t\tcyclesCount = this.calculateMonthlyCycles(createdAt, today)\r\n\t\t\t// \t}\r\n\r\n\t\t\t// \tconsole.log('计算得到的周期数:', cyclesCount)\r\n\r\n\t\t\t// \t// 生成所有历史周期\r\n\t\t\t// \tfor (let i = 0; i < cyclesCount; i++) {\r\n\t\t\t// \t\tconst cyclePeriod = this.calculateCyclePeriod(createdAt, i, settlementCycle)\r\n\t\t\t// \t\tcycles.push({\r\n\t\t\t// \t\t\tnumber: cyclesCount - i,\r\n\t\t\t// \t\t\tstartDate: this.formatDate(cyclePeriod.start),\r\n\t\t\t// \t\t\tendDate: this.formatDate(cyclePeriod.end),\r\n\t\t\t// \t\t\tisCurrent: cyclePeriod.isCurrent\r\n\t\t\t// \t\t})\r\n\t\t\t// \t}\r\n\r\n\t\t\t// \tthis.settlementCycles = cycles\r\n\t\t\t// \tconsole.log('生成的周期列表长度:', this.settlementCycles.length)\r\n\r\n\t\t\t// \t// 如果没有生成任何周期，添加提示\r\n\t\t\t// \tif (this.settlementCycles.length === 0) {\r\n\t\t\t// \t\tconsole.warn('未计算出任何周期，可能是新创建的月结资格')\r\n\t\t\t// \t}\r\n\t\t\t// },\r\n\r\n\t\t\t// 计算周期的起止时间\r\n\t\t\t// calculateCyclePeriod(startDate, cycleIndex, settlementCycle) {\r\n\t\t\t// \t// 克隆日期，避免修改原始日期\r\n\t\t\t// \tconst start = new Date(startDate.getTime())\r\n\t\t\t// \tconst end = new Date(startDate.getTime())\r\n\t\t\t// \tconst today = new Date()\r\n\r\n\t\t\t// \t// 月结的月份数\r\n\t\t\t// \tlet monthsPerCycle = 1; // 默认月结\r\n\t\t\t// \tif (settlementCycle === 1) monthsPerCycle = 3; // 季结\r\n\t\t\t// \tif (settlementCycle === 2) monthsPerCycle = 6; // 半年结\r\n\r\n\t\t\t// \t// 设置开始日期 - 向后推指定月数\r\n\t\t\t// \tstart.setMonth(start.getMonth() + cycleIndex * monthsPerCycle)\r\n\r\n\t\t\t// \t// 设置结束日期 - 开始日期后推指定月数，再减一天\r\n\t\t\t// \tend.setMonth(start.getMonth() + monthsPerCycle)\r\n\t\t\t// \tend.setDate(end.getDate() - 1)\r\n\r\n\t\t\t// \t// 判断是否为当前周期\r\n\t\t\t// \tconst isCurrent = today >= start && today <= end\r\n\r\n\t\t\t// \treturn {\r\n\t\t\t// \t\tstart,\r\n\t\t\t// \t\tend,\r\n\t\t\t// \t\tisCurrent\r\n\t\t\t// \t}\r\n\t\t\t// },\r\n\r\n\t\t\t// 计算月结周期数\r\n\t\t\t// calculateMonthlyCycles(startDate, today) {\r\n\t\t\t// \tconst months = (today.getFullYear() - startDate.getFullYear()) * 12 +\r\n\t\t\t// \t\ttoday.getMonth() - startDate.getMonth()\r\n\t\t\t// \treturn months + 1 // 包含当前月\r\n\t\t\t// },\r\n\r\n\t\t\t// // 计算季结周期数\r\n\t\t\t// calculateQuarterlyCycles(startDate, today) {\r\n\t\t\t// \tconst months = (today.getFullYear() - startDate.getFullYear()) * 12 +\r\n\t\t\t// \t\ttoday.getMonth() - startDate.getMonth()\r\n\t\t\t// \treturn Math.floor(months / 3) + 1 // 每3个月一个周期\r\n\t\t\t// },\r\n\r\n\t\t\t// // 计算半年结周期数\r\n\t\t\t// calculateHalfYearlyCycles(startDate, today) {\r\n\t\t\t// \tconst months = (today.getFullYear() - startDate.getFullYear()) * 12 +\r\n\t\t\t// \t\ttoday.getMonth() - startDate.getMonth()\r\n\t\t\t// \treturn Math.floor(months / 6) + 1 // 每6个月一个周期\r\n\t\t\t// },\r\n\r\n\t\t\t// 修改周期选择方法，确保在不同标签下正确工作\r\n\t\t\tselectCycle(index) {\r\n\t\t\t\tthis.currentCycleIndex = index\r\n\t\t\t\tthis.showCyclePanel = false\r\n\r\n\t\t\t\tconst cycle = this.settlementCycles[index]\r\n\r\n\t\t\t\t// 如果选择\"全部\"选项\r\n\t\t\t\tif (cycle.isAll) {\r\n\t\t\t\t\tthis.startDate = ''\r\n\t\t\t\t\tthis.endDate = ''\r\n\t\t\t\t\tthis.displayStartDate = ''\r\n\t\t\t\t\tthis.displayEndDate = ''\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// 设置日期范围为选中周期的范围，确保起止日期正确\r\n\t\t\t\t\tthis.startDate = cycle.startDate\r\n\t\t\t\t\tthis.endDate = cycle.endDate\r\n\t\t\t\t\tthis.displayStartDate = cycle.startDate\r\n\t\t\t\t\tthis.displayEndDate = cycle.endDate\r\n\r\n\t\t\t\t\t// 验证日期有效性（虽然从周期生成的日期应该总是有效的）\r\n\t\t\t\t\tif (this.startDate > this.endDate) {\r\n\t\t\t\t\t\tconsole.error('周期日期错误:', {\r\n\t\t\t\t\t\t\tstartDate: this.startDate,\r\n\t\t\t\t\t\t\tendDate: this.endDate\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\ttitle: '周期日期错误，请手动选择日期',\r\n\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 重新加载数据\r\n\t\t\t\tthis.currentPage = 1\r\n\t\t\t\tthis.hasMoreData = true\r\n\t\t\t\tthis.loadStatements(true)\r\n\t\t\t\tthis.getAllPrice();\r\n\t\t\t},\r\n\r\n\t\t\t// 添加全部周期选项 - 修改判断逻辑\r\n\t\t\ttoggleCyclePanel() {\r\n\t\t\t\t// 如果没有有效周期，不需要切换面板\r\n\t\t\t\tif (this.settlementCycles.length === 0) {\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '暂无历史周期',\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.showCyclePanel = !this.showCyclePanel\r\n\r\n\t\t\t\t// 只有当有多个周期时才添加\"全部\"选项\r\n\t\t\t\tif (this.showCyclePanel && this.settlementCycles.length > 1 && !this.hasAllPeriodsOption) {\r\n\t\t\t\t\tthis.settlementCycles.unshift({\r\n\t\t\t\t\t\tnumber: '全部',\r\n\t\t\t\t\t\tstartDate: '',\r\n\t\t\t\t\t\tendDate: '',\r\n\t\t\t\t\t\tisAll: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.hasAllPeriodsOption = true\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 修改结算账单方法\r\n\t\t\tasync settleStatements() {\r\n\t\t\t\tif (this.paymentLoading) return\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tthis.paymentLoading = true\r\n\r\n\t\t\t\t\t// 1. 修复这里 - uni.showModal 不能使用解构赋值\r\n\t\t\t\t\tconst res = await uni.showModal({\r\n\t\t\t\t\t\ttitle: '结算确认',\r\n\t\t\t\t\t\tcontent: `确认支付 ¥${this.monthlyBill.treatSettlementAmount} 的账单？`,\r\n\t\t\t\t\t\tconfirmText: '确认支付',\r\n\t\t\t\t\t\tconfirmColor: '#07C160'\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\tconsole.log('确认框结果:', res)\r\n\r\n\t\t\t\t\t// 如果用户取消，结束流程\r\n\t\t\t\t\tif (!res.confirm) {\r\n\t\t\t\t\t\tthis.paymentLoading = false\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// 显示加载提示\r\n\t\t\t\t\tuni.showLoading({\r\n\t\t\t\t\t\ttitle: '支付处理中',\r\n\t\t\t\t\t\tmask: true\r\n\t\t\t\t\t})\r\n\r\n\t\t\t\t\t// 处理支付逻辑（保留您现有的代码）\r\n\t\t\t\t\tlet orderId = 'TEST' + new Date().getTime() + Math.floor(Math.random() * 1000);\r\n\t\t\t\t\tconst openId = uni.getStorageSync('openId');\r\n\t\t\t\t\tconst payResult = await wxpayApi.processPayment(openId, orderId, this.monthlyBill\r\n\t\t\t\t\t\t.treatSettlementAmount,\r\n\t\t\t\t\t\t\"用户\" + this.userInfo.userName + \"支付\" + this.startDate + '至' +  this.endDate +\r\n\t\t\t\t\t\t'月结账单，共:' + this.monthlyBill.treatSettlementAmount)\r\n\t\t\t\t\t// const payResult = await wxpayApi.processPayment(openId, orderId, 0.01,\r\n\t\t\t\t\t// \t\"用户\" + this.userInfo.userName + \"支付\" + this.startDate + '至' + this.endDate +\r\n\t\t\t\t\t// \t'月结账单，共:' + this.monthlyBill.treatSettlementAmount)\r\n\t\t\t\t\tif (payResult.success) {\r\n\t\t\t\t\t\tconst startTime = this.startDate || ''\r\n\t\t\t\t\t\tconst endTime = this.endDate || ''\r\n\t\t\t\t\t\tconst payResult = await statementApi.payBills(this.eligibilityId, startTime, endTime)\r\n\r\n\t\t\t\t\t\tif (payResult) {\r\n\t\t\t\t\t\t\t// 延迟2秒模拟支付过程\r\n\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\t\ttitle: '结算成功',\r\n\t\t\t\t\t\t\t\t\ticon: 'success'\r\n\t\t\t\t\t\t\t\t})\r\n\r\n\t\t\t\t\t\t\t\t// 刷新数据\r\n\t\t\t\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\t\t\t\tthis.refreshData()\r\n\t\t\t\t\t\t\t\t\tthis.paymentLoading = false\r\n\t\t\t\t\t\t\t\t}, 1500)\r\n\t\t\t\t\t\t\t}, 2000)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow new Error('支付账单失败')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// 支付失败\r\n\t\t\t\t\t\tconsole.log(\"支付结果:\", payResult.message);\r\n\t\t\t\t\t\tif (!payResult.canceled) {\r\n\t\t\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\t\t\ttitle: payResult.message,\r\n\t\t\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t\t\t});\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn; // 支付失败则不继续执行后续创建订单的代码\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (e) {\r\n\t\t\t\t\tconsole.error('支付失败:', e)\r\n\t\t\t\t\tuni.hideLoading()\r\n\t\t\t\t\tuni.showToast({\r\n\t\t\t\t\t\ttitle: '支付失败: ' + (e.message || '未知错误'),\r\n\t\t\t\t\t\ticon: 'none'\r\n\t\t\t\t\t})\r\n\t\t\t\t\tthis.paymentLoading = false\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t// 添加loadMoreData方法（负责触发加载更多）\r\n\t\t\tloadMoreData() {\r\n\t\t\t\t// 如果正在加载或没有更多数据，则不处理\r\n\t\t\t\tif (this.loading || !this.hasMoreData) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconsole.log('触发加载更多数据...');\r\n\t\t\t\t// 页码加1\r\n\t\t\t\tthis.currentPage++;\r\n\t\t\t\t// 调用加载方法，传入false表示追加模式\r\n\t\t\t\tthis.loadStatements(false);\r\n\t\t\t},\r\n\r\n\t\t\t// 刷新数据时重置分页状态\r\n\t\t\trefreshData() {\r\n\t\t\t\tthis.loadStatements(true);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n</script>\r\n\r\n<style lang=\"scss\">\r\n\t.statement-container {\r\n\t\tbackground-color: #F5F7FA;\r\n\t\tmin-height: 100vh;\r\n\t\tpadding-bottom: 30rpx;\r\n\t}\r\n\r\n\t// 导航栏样式优化\r\n\t.nav-header {\r\n\t\tbackground: #FFFFFF;\r\n\t\tpadding: 20rpx 0;\r\n\t\tposition: sticky;\r\n\t\ttop: 0;\r\n\t\tz-index: 100;\r\n\t\tbox-shadow: 0 4rpx 12rpx rgba(0, 0, 0, 0.04);\r\n\r\n\t\t.tabs-container {\r\n\t\t\tposition: relative;\r\n\r\n\t\t\t&::after {\r\n\t\t\t\tcontent: '';\r\n\t\t\t\tposition: absolute;\r\n\t\t\t\tbottom: 0;\r\n\t\t\t\tleft: 15%;\r\n\t\t\t\tright: 15%;\r\n\t\t\t\theight: 1px;\r\n\t\t\t\tbackground: linear-gradient(to right,\r\n\t\t\t\t\t\trgba(0, 0, 0, 0),\r\n\t\t\t\t\t\trgba(0, 0, 0, 0.05),\r\n\t\t\t\t\t\trgba(0, 0, 0, 0));\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.tabs {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\tpadding: 0 40rpx;\r\n\r\n\t\t\t.tab-item {\r\n\t\t\t\tposition: relative;\r\n\t\t\t\tpadding: 20rpx 40rpx;\r\n\t\t\t\tmargin: 0 30rpx;\r\n\r\n\t\t\t\ttext {\r\n\t\t\t\t\tfont-size: 32rpx;\r\n\t\t\t\t\tcolor: #666666;\r\n\t\t\t\t\tfont-weight: 400;\r\n\t\t\t\t\ttransition: all 0.3s;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.tab-line {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\tbottom: 0;\r\n\t\t\t\t\tleft: 50%;\r\n\t\t\t\t\ttransform: translateX(-50%);\r\n\t\t\t\t\twidth: 60rpx;\r\n\t\t\t\t\theight: 6rpx;\r\n\t\t\t\t\tbackground: linear-gradient(90deg, #FF6B01, #FF9C01);\r\n\t\t\t\t\tborder-radius: 3rpx;\r\n\t\t\t\t\ttransition: all 0.3s ease;\r\n\t\t\t\t\tbox-shadow: 0 2rpx 8rpx rgba(255, 107, 1, 0.3);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&.active {\r\n\t\t\t\t\ttext {\r\n\t\t\t\t\t\tcolor: #FF6B01;\r\n\t\t\t\t\t\tfont-weight: 500;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&:active {\r\n\t\t\t\t\topacity: 0.7;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 摘要信息优化\r\n\t.statement-summary {\r\n\t\tpadding: 20rpx 30rpx;\r\n\r\n\t\t.summary-card {\r\n\t\t\tbackground: linear-gradient(135deg, #FF6B01, #FF9C01);\r\n\t\t\tbackground-size: cover;\r\n\t\t\tborder-radius: 16rpx;\r\n\t\t\tpadding: 30rpx;\r\n\t\t\tbox-shadow: 0 8rpx 20rpx rgba(255, 107, 1, 0.15);\r\n\t\t\toverflow: hidden;\r\n\r\n\t\t\t.summary-header {\r\n\t\t\t\tpadding: 30rpx;\r\n\t\t\t\tcolor: rgba(255, 255, 255, 0.9);\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-between;\r\n\t\t\t\talign-items: center;\r\n\r\n\t\t\t\ttext {\r\n\t\t\t\t\tfont-size: 32rpx;\r\n\t\t\t\t\tfont-weight: 500;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.current-period-badge {\r\n\t\t\t\t\tpadding: 8rpx 20rpx;\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.2);\r\n\t\t\t\t\tborder-radius: 30rpx;\r\n\t\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\t\tcolor: #FFFFFF;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.summary-content {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: space-around;\r\n\t\t\t\tpadding: 20rpx 30rpx 40rpx;\r\n\r\n\t\t\t\t.summary-item {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-direction: column;\r\n\t\t\t\t\talign-items: center;\r\n\r\n\t\t\t\t\t.value {\r\n\t\t\t\t\t\tfont-size: 48rpx;\r\n\t\t\t\t\t\tcolor: #FFFFFF;\r\n\t\t\t\t\t\tfont-weight: 600;\r\n\t\t\t\t\t\tmargin-bottom: 10rpx;\r\n\t\t\t\t\t\ttext-shadow: 0 2rpx 4rpx rgba(0, 0, 0, 0.1);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.label {\r\n\t\t\t\t\t\tfont-size: 26rpx;\r\n\t\t\t\t\t\tcolor: rgba(255, 255, 255, 0.8);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.summary-divider {\r\n\t\t\t\t\twidth: 2rpx;\r\n\t\t\t\t\tbackground: rgba(255, 255, 255, 0.3);\r\n\t\t\t\t\tmargin: 0 30rpx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 优化结算按钮样式\r\n\t\t\t.settle-button-container {\r\n\t\t\t\tmargin-top: 20rpx;\r\n\t\t\t\tpadding-top: 20rpx;\r\n\t\t\t\tborder-top: 1px solid rgba(255, 255, 255, 0.1);\r\n\t\t\t}\r\n\r\n\t\t\t.settle-button {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tjustify-content: center;\r\n\t\t\t\theight: 80rpx;\r\n\t\t\t\tbackground-color: #07C160; // 微信支付绿色\r\n\t\t\t\tborder-radius: 40rpx;\r\n\t\t\t\tcolor: #FFFFFF;\r\n\t\t\t\tfont-size: 30rpx;\r\n\t\t\t\tfont-weight: 500;\r\n\t\t\t\tpadding: 0 40rpx;\r\n\t\t\t\tborder: none;\r\n\t\t\t\twidth: 100%;\r\n\r\n\t\t\t\tuni-icons {\r\n\t\t\t\t\tmargin-right: 10rpx;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t&:active {\r\n\t\t\t\t\tbackground-color: #06AD56;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// 添加周期信息样式\r\n\t\t\t.period-info {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmargin-top: 20rpx;\r\n\t\t\t\tpadding-top: 20rpx;\r\n\t\t\t\tborder-top: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n\t\t\t\ttext {\r\n\t\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\t\tcolor: #FFFFFF;\r\n\t\t\t\t\tmargin-left: 10rpx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 筛选卡片\r\n\t.filter-card {\r\n\t\tmargin: 20rpx 30rpx;\r\n\t\tbackground: #FFFFFF;\r\n\t\tborder-radius: 16rpx;\r\n\t\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.04);\r\n\t\toverflow: hidden;\r\n\r\n\t\t.filter-header {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: center;\r\n\t\t\tpadding: 30rpx;\r\n\t\t\tborder-bottom: 1px solid rgba(0, 0, 0, 0.03);\r\n\r\n\t\t\ttext {\r\n\t\t\t\tfont-size: 30rpx;\r\n\t\t\t\tcolor: #333333;\r\n\t\t\t\tfont-weight: 500;\r\n\t\t\t}\r\n\r\n\t\t\t&:active {\r\n\t\t\t\tbackground: #FAFAFA;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.filter-body {\r\n\t\t\tpadding: 20rpx 30rpx;\r\n\r\n\t\t\t.filter-row {\r\n\t\t\t\tmargin-bottom: 30rpx;\r\n\r\n\t\t\t\t.filter-label {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tmargin-bottom: 16rpx;\r\n\r\n\t\t\t\t\tuni-icons {\r\n\t\t\t\t\t\tmargin-right: 10rpx;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttext {\r\n\t\t\t\t\t\tfont-size: 28rpx;\r\n\t\t\t\t\t\tcolor: #333333;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.date-pickers {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: center;\r\n\r\n\t\t\t\t\t.date-picker {\r\n\t\t\t\t\t\tflex: 1;\r\n\t\t\t\t\t\tbackground: #F8F9FA;\r\n\t\t\t\t\t\tborder-radius: 12rpx;\r\n\t\t\t\t\t\tpadding: 16rpx 20rpx;\r\n\r\n\t\t\t\t\t\t.picker-content {\r\n\t\t\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\t\t\tjustify-content: space-between;\r\n\t\t\t\t\t\t\talign-items: center;\r\n\r\n\t\t\t\t\t\t\ttext {\r\n\t\t\t\t\t\t\t\tfont-size: 26rpx;\r\n\t\t\t\t\t\t\t\tcolor: #333333;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.date-separator {\r\n\t\t\t\t\t\tmargin: 0 20rpx;\r\n\t\t\t\t\t\tfont-size: 26rpx;\r\n\t\t\t\t\t\tcolor: #999999;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.filter-tabs {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\tflex-wrap: wrap;\r\n\r\n\t\t\t\t\t.filter-tab {\r\n\t\t\t\t\t\tpadding: 12rpx 36rpx;\r\n\t\t\t\t\t\tbackground: #F8F9FA;\r\n\t\t\t\t\t\tborder-radius: 40rpx;\r\n\t\t\t\t\t\tmargin-right: 20rpx;\r\n\t\t\t\t\t\tmargin-bottom: 16rpx;\r\n\t\t\t\t\t\tfont-size: 26rpx;\r\n\t\t\t\t\t\tcolor: #666666;\r\n\t\t\t\t\t\ttransition: all 0.3s;\r\n\r\n\t\t\t\t\t\t&.active {\r\n\t\t\t\t\t\t\tbackground: rgba(255, 107, 1, 0.1);\r\n\t\t\t\t\t\t\tcolor: #FF6B01;\r\n\t\t\t\t\t\t\tfont-weight: 500;\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t&:active {\r\n\t\t\t\t\t\t\ttransform: scale(0.98);\r\n\t\t\t\t\t\t\topacity: 0.9;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.filter-actions {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\tjustify-content: flex-end;\r\n\t\t\t\tmargin-top: 30rpx;\r\n\r\n\t\t\t\t.filter-btn {\r\n\t\t\t\t\tdisplay: flex;\r\n\t\t\t\t\talign-items: center;\r\n\t\t\t\t\tjustify-content: center;\r\n\t\t\t\t\tpadding: 16rpx 40rpx;\r\n\t\t\t\t\tborder-radius: 40rpx;\r\n\t\t\t\t\tfont-size: 28rpx;\r\n\t\t\t\t\tmargin-left: 20rpx;\r\n\r\n\t\t\t\t\tuni-icons {\r\n\t\t\t\t\t\tmargin-right: 8rpx;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t&.reset {\r\n\t\t\t\t\t\tbackground: #F5F6FA;\r\n\t\t\t\t\t\tcolor: #666666;\r\n\t\t\t\t\t\tborder: 1px solid rgba(0, 0, 0, 0.05);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t&.apply {\r\n\t\t\t\t\t\tbackground: linear-gradient(90deg, #FF6B01, #FF9C01);\r\n\t\t\t\t\t\tcolor: #FFFFFF;\r\n\t\t\t\t\t\tbox-shadow: 0 6rpx 16rpx rgba(255, 107, 1, 0.2);\r\n\r\n\t\t\t\t\t\t&:active {\r\n\t\t\t\t\t\t\ttransform: translateY(2rpx);\r\n\t\t\t\t\t\t\tbox-shadow: 0 2rpx 8rpx rgba(255, 107, 1, 0.15);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 列表标题栏\r\n\t.list-header {\r\n\t\tdisplay: flex;\r\n\t\tjustify-content: space-between;\r\n\t\talign-items: center;\r\n\t\tpadding: 20rpx 30rpx;\r\n\r\n\t\ttext {\r\n\t\t\tfont-size: 32rpx;\r\n\t\t\tcolor: #333333;\r\n\t\t\tfont-weight: 500;\r\n\t\t}\r\n\r\n\t\t.list-count {\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #999999;\r\n\t\t\tfont-weight: normal;\r\n\t\t}\r\n\t}\r\n\r\n\t// 账单列表\r\n\t.statement-list-container {\r\n\t\toverflow: hidden;\r\n\t\theight: calc(100vh - 450rpx);\r\n\t}\r\n\r\n\t.statement-list {\r\n\t\toverflow-y: auto;\r\n\t\tpadding: 0 30rpx;\r\n\t}\r\n\r\n\t.statement-item {\r\n\t\tbackground: #FFFFFF;\r\n\t\tborder-radius: 16rpx;\r\n\t\tpadding: 30rpx;\r\n\t\tmargin-bottom: 20rpx;\r\n\t\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.04);\r\n\t\ttransition: transform 0.3s, box-shadow 0.3s;\r\n\r\n\t\t// 入场动画\r\n\t\t&.animate-in {\r\n\t\t\tanimation: slideIn 0.5s ease forwards;\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: translateY(20rpx);\r\n\t\t}\r\n\r\n\t\t&:active {\r\n\t\t\ttransform: scale(0.98);\r\n\t\t\tbox-shadow: 0 2rpx 8rpx rgba(0, 0, 0, 0.02);\r\n\t\t}\r\n\r\n\t\t.item-header {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: flex-start;\r\n\t\t\tmargin-bottom: 20rpx;\r\n\r\n\t\t\t.order-info {\r\n\r\n\t\t\t\t.order-id {\r\n\t\t\t\t\tfont-size: 28rpx;\r\n\t\t\t\t\tcolor: #333333;\r\n\t\t\t\t\tfont-weight: 500;\r\n\t\t\t\t\tmargin-bottom: 8rpx;\r\n\t\t\t\t\tdisplay: block;\r\n\t\t\t\t\twidth: 200px;\r\n\t\t\t\t\toverflow: hidden;\r\n\t\t\t\t\t/* 隐藏超出部分 */\r\n\t\t\t\t\twhite-space: nowrap;\r\n\t\t\t\t\t/* 禁止换行 */\r\n\t\t\t\t\ttext-overflow: ellipsis;\r\n\t\t\t\t\t/* 超出显示省略号 */\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.time {\r\n\t\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\t\tcolor: #999999;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.type-tag {\r\n\t\t\t\tpadding: 8rpx 24rpx;\r\n\t\t\t\tbackground: rgba(82, 196, 26, 0.1);\r\n\t\t\t\tborder-radius: 30rpx;\r\n\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\tcolor: #52C41A;\r\n\t\t\t\tfont-weight: 500;\r\n\r\n\t\t\t\t&.refund {\r\n\t\t\t\t\tbackground: rgba(255, 77, 79, 0.1);\r\n\t\t\t\t\tcolor: #FF4D4F;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.item-content {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: center;\r\n\t\t\tmargin-bottom: 30rpx;\r\n\r\n\t\t\t.amount {\r\n\t\t\t\tfont-size: 40rpx;\r\n\t\t\t\tcolor: #FF6B01;\r\n\t\t\t\tfont-weight: 600;\r\n\r\n\t\t\t\t&.refund {\r\n\t\t\t\t\tcolor: #FF4D4F;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.item-footer {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: center;\r\n\t\t\tpadding-top: 20rpx;\r\n\t\t\tborder-top: 1px solid #F5F5F5;\r\n\r\n\t\t\t.payment-status {\r\n\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\tpadding: 6rpx 20rpx;\r\n\t\t\t\tbackground: rgba(250, 173, 20, 0.1);\r\n\t\t\t\tcolor: #FAAD14;\r\n\t\t\t\tborder-radius: 20rpx;\r\n\r\n\t\t\t\t&.paid {\r\n\t\t\t\t\tbackground: rgba(82, 196, 26, 0.1);\r\n\t\t\t\t\tcolor: #52C41A;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t.flex-space {\r\n\t\t\t\tflex: 1;\r\n\t\t\t}\r\n\r\n\t\t\t.detail-link {\r\n\t\t\t\tdisplay: flex;\r\n\t\t\t\talign-items: center;\r\n\t\t\t\tmargin-left: auto;\r\n\r\n\t\t\t\ttext {\r\n\t\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\t\tcolor: #999999;\r\n\t\t\t\t\tmargin-right: 6rpx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 空状态美化\r\n\t.empty-state {\r\n\t\tdisplay: flex;\r\n\t\tflex-direction: column;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 100rpx 0;\r\n\r\n\t\t.empty-icon {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: center;\r\n\t\t\talign-items: center;\r\n\t\t\twidth: 180rpx;\r\n\t\t\theight: 180rpx;\r\n\t\t\tbackground: #F8F9FA;\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tmargin-bottom: 30rpx;\r\n\t\t}\r\n\r\n\t\ttext {\r\n\t\t\tfont-size: 32rpx;\r\n\t\t\tcolor: #666666;\r\n\t\t\tmargin-bottom: 10rpx;\r\n\t\t}\r\n\r\n\t\t.sub-text {\r\n\t\t\tfont-size: 26rpx;\r\n\t\t\tcolor: #999999;\r\n\t\t\tmargin-bottom: 40rpx;\r\n\t\t}\r\n\r\n\t\t.refresh-btn {\r\n\t\t\tpadding: 16rpx 60rpx;\r\n\t\t\tbackground: #F8F9FA;\r\n\t\t\tborder: 1px solid rgba(0, 0, 0, 0.05);\r\n\t\t\tcolor: #666666;\r\n\t\t\tfont-size: 28rpx;\r\n\t\t\tborder-radius: 40rpx;\r\n\r\n\t\t\t&:active {\r\n\t\t\t\tbackground: #EAEAEA;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 动画定义\r\n\t@keyframes slideIn {\r\n\t\tfrom {\r\n\t\t\topacity: 0;\r\n\t\t\ttransform: translateY(20rpx);\r\n\t\t}\r\n\r\n\t\tto {\r\n\t\t\topacity: 1;\r\n\t\t\ttransform: translateY(0);\r\n\t\t}\r\n\t}\r\n\r\n\t// 添加周期选择器样式\r\n\t.cycle-selector {\r\n\t\tmargin: 20rpx 30rpx;\r\n\t\tbackground: #FFFFFF;\r\n\t\tborder-radius: 16rpx;\r\n\t\toverflow: hidden;\r\n\t\tbox-shadow: 0 4rpx 16rpx rgba(0, 0, 0, 0.04);\r\n\r\n\t\t.cycle-header {\r\n\t\t\tdisplay: flex;\r\n\t\t\tjustify-content: space-between;\r\n\t\t\talign-items: center;\r\n\t\t\tpadding: 30rpx;\r\n\t\t\tborder-bottom: 1px solid #F5F5F5;\r\n\r\n\t\t\ttext {\r\n\t\t\t\tfont-size: 30rpx;\r\n\t\t\t\tcolor: #333333;\r\n\t\t\t\tfont-weight: 500;\r\n\t\t\t}\r\n\r\n\t\t\t.current-cycle {\r\n\t\t\t\tflex: 1;\r\n\t\t\t\ttext-align: right;\r\n\t\t\t\tfont-size: 26rpx;\r\n\t\t\t\tcolor: #666666;\r\n\t\t\t\tmargin-right: 10rpx;\r\n\t\t\t\tfont-weight: normal;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t.cycle-panel {\r\n\t\t\tmax-height: 600rpx;\r\n\t\t\tbackground: #FFFFFF;\r\n\r\n\t\t\t.cycle-list {\r\n\t\t\t\tmax-height: 600rpx;\r\n\t\t\t}\r\n\r\n\t\t\t.cycle-item {\r\n\t\t\t\tpadding: 30rpx;\r\n\t\t\t\tborder-bottom: 1px solid #F5F5F5;\r\n\t\t\t\tposition: relative;\r\n\r\n\t\t\t\t&.active {\r\n\t\t\t\t\tbackground: rgba(255, 107, 1, 0.05);\r\n\r\n\t\t\t\t\t&::before {\r\n\t\t\t\t\t\tcontent: '';\r\n\t\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\t\tleft: 0;\r\n\t\t\t\t\t\ttop: 50%;\r\n\t\t\t\t\t\ttransform: translateY(-50%);\r\n\t\t\t\t\t\twidth: 6rpx;\r\n\t\t\t\t\t\theight: 60%;\r\n\t\t\t\t\t\tbackground: #FF6B01;\r\n\t\t\t\t\t\tborder-radius: 0 6rpx 6rpx 0;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t.cycle-name {\r\n\t\t\t\t\t\tcolor: #FF6B01;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.cycle-name {\r\n\t\t\t\t\tfont-size: 30rpx;\r\n\t\t\t\t\tcolor: #333333;\r\n\t\t\t\t\tmargin-bottom: 10rpx;\r\n\t\t\t\t\tfont-weight: 500;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.cycle-date {\r\n\t\t\t\t\tfont-size: 26rpx;\r\n\t\t\t\t\tcolor: #999999;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t.cycle-status {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\tright: 30rpx;\r\n\t\t\t\t\ttop: 50%;\r\n\t\t\t\t\ttransform: translateY(-50%);\r\n\t\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\t\tpadding: 6rpx 20rpx;\r\n\t\t\t\t\tbackground: rgba(82, 196, 26, 0.1);\r\n\t\t\t\t\tcolor: #52C41A;\r\n\t\t\t\t\tborder-radius: 30rpx;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// 添加历史周期标记\r\n\t\t\t\t.history-badge {\r\n\t\t\t\t\tposition: absolute;\r\n\t\t\t\t\tright: 30rpx;\r\n\t\t\t\t\ttop: 50%;\r\n\t\t\t\t\ttransform: translateY(-50%);\r\n\t\t\t\t\tfont-size: 24rpx;\r\n\t\t\t\t\tpadding: 6rpx 20rpx;\r\n\t\t\t\t\tbackground: rgba(153, 153, 153, 0.1);\r\n\t\t\t\t\tcolor: #999999;\r\n\t\t\t\t\tborder-radius: 30rpx;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t// 添加无周期提示样式\r\n\t.no-cycles-tip {\r\n\t\tmargin: 20rpx 30rpx;\r\n\t\tpadding: 20rpx 30rpx;\r\n\t\tbackground: rgba(250, 173, 20, 0.1);\r\n\t\tborder-radius: 8rpx;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\r\n\t\tuni-icons {\r\n\t\t\tmargin-right: 10rpx;\r\n\t\t}\r\n\r\n\t\ttext {\r\n\t\t\tfont-size: 26rpx;\r\n\t\t\tcolor: #FAAD14;\r\n\t\t}\r\n\t}\r\n\r\n\t// 添加资格失效提示样式\r\n\t.invalid-eligibility-tip {\r\n\t\tmargin-top: 20rpx;\r\n\t\tpadding: 16rpx 20rpx;\r\n\t\tbackground: rgba(255, 77, 79, 0.1);\r\n\t\tborder-radius: 8rpx;\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\r\n\t\tuni-icons {\r\n\t\t\tmargin-right: 10rpx;\r\n\t\t}\r\n\r\n\t\ttext {\r\n\t\t\tfont-size: 24rpx;\r\n\t\t\tcolor: #FF4D4F;\r\n\t\t}\r\n\t}\r\n\r\n\t// 添加底部加载状态指示器\r\n\t.load-more {\r\n\t\tdisplay: flex;\r\n\t\talign-items: center;\r\n\t\tjustify-content: center;\r\n\t\tpadding: 30rpx 0;\r\n\r\n\t\t.loading-spinner {\r\n\t\t\twidth: 36rpx;\r\n\t\t\theight: 36rpx;\r\n\t\t\tborder: 3rpx solid #F5F5F5;\r\n\t\t\tborder-radius: 50%;\r\n\t\t\tborder-top-color: #FF6B01;\r\n\t\t\tmargin-right: 16rpx;\r\n\t\t\tanimation: spin 1s linear infinite;\r\n\t\t}\r\n\r\n\t\ttext {\r\n\t\t\tfont-size: 26rpx;\r\n\t\t\tcolor: #999999;\r\n\t\t}\r\n\t}\r\n\r\n\t// 添加无更多数据提示\r\n\t.no-more-data {\r\n\t\ttext-align: center;\r\n\t\tpadding: 30rpx 0;\r\n\r\n\t\ttext {\r\n\t\t\tfont-size: 26rpx;\r\n\t\t\tcolor: #999999;\r\n\t\t}\r\n\t}\r\n\r\n\t@keyframes spin {\r\n\t\t0% {\r\n\t\t\ttransform: rotate(0deg);\r\n\t\t}\r\n\r\n\t\t100% {\r\n\t\t\ttransform: rotate(360deg);\r\n\t\t}\r\n\t}\r\n</style>","import mod from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--8-oneOf-1-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--8-oneOf-1-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--8-oneOf-1-2!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--8-oneOf-1-3!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\sass-loader\\\\dist\\\\cjs.js??ref--8-oneOf-1-4!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--8-oneOf-1-5!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./statement.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\mini-css-extract-plugin\\\\dist\\\\loader.js??ref--8-oneOf-1-0!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\css-loader\\\\dist\\\\cjs.js??ref--8-oneOf-1-1!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\loaders\\\\stylePostLoader.js!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--8-oneOf-1-2!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\postcss-loader\\\\src\\\\index.js??ref--8-oneOf-1-3!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\sass-loader\\\\dist\\\\cjs.js??ref--8-oneOf-1-4!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\webpack-preprocess-loader\\\\index.js??ref--8-oneOf-1-5!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\vue-cli-plugin-uni\\\\packages\\\\vue-loader\\\\lib\\\\index.js??vue-loader-options!D:\\\\HBuilderX\\\\plugins\\\\uniapp-cli\\\\node_modules\\\\@dcloudio\\\\webpack-uni-mp-loader\\\\lib\\\\style.js!./statement.vue?vue&type=style&index=0&lang=scss&\"","// extracted by mini-css-extract-plugin\n    if(module.hot) {\n      // 1745816325805\n      var cssReload = require(\"D:/HBuilderX/plugins/uniapp-cli/node_modules/mini-css-extract-plugin/dist/hmr/hotModuleReplacement.js\")(module.id, {\"hmr\":true,\"publicPath\":\"../../\",\"locals\":false});\n      module.hot.dispose(cssReload);\n      module.hot.accept(undefined, cssReload);\n    }\n  "],"sourceRoot":""}